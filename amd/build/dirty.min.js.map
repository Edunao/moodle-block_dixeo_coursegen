{"version":3,"file":"dirty.min.js","sources":["../src/dirty.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module for settings UI.\n *\n * @module     block_dixeo_coursegen/dirty\n * @author     Josemaria Bolanos <admin@mako.digital>\n * @copyright  2025 Dixeo (contact@dixeo.com)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery'], function($) {\n    return {\n        init: function() {\n            const form = document.getElementById('adminsettings');\n            if (!form) {\n                return;\n            }\n\n            // Snapshot initial state.\n            const initial = new Map();\n            $(form).find('input, select, textarea').each(function() {\n                const el = this;\n                if (!el.name) {\n                    return;\n                }\n                const val = (el.type === 'checkbox' || el.type === 'radio') ? el.checked : el.value;\n                initial.set(el.name, val);\n            });\n\n            /**\n             * Checks if any input, select, or textarea element within the specified form\n             * has been modified from its initial value.\n             * @returns {boolean} True if the form is dirty (has unsaved changes), false otherwise.\n             */\n            function isDirty() {\n                let dirty = false;\n                $(form).find('input, select, textarea').each(function() {\n                    const el = this;\n                    if (!el.name || !initial.has(el.name)) {\n                        return;\n                    }\n                    const now = (el.type === 'checkbox' || el.type === 'radio') ? el.checked : el.value;\n                    if (now != initial.get(el.name)) {\n                        dirty = true;\n                        return;\n                    }\n                });\n                return dirty;\n            }\n\n            const register = form.querySelector('button.dixeo-register-button');\n            if (!register) {\n                return;\n            }\n\n            const needsRegistration = form.querySelector('.dixeo-register-instructions .needs-registration');\n            if (!needsRegistration) {\n                return;\n            }\n\n            const needsSaving = form.querySelector('.dixeo-register-instructions .needs-saving');\n            if (!needsSaving) {\n                return;\n            }\n\n            $(form).on('input change', () => {\n                register.disabled = isDirty();\n                if (isDirty()) {\n                    needsRegistration.classList.add('hidden');\n                    needsSaving.classList.remove('hidden');\n                } else {\n                    needsRegistration.classList.remove('hidden');\n                    needsSaving.classList.add('hidden');\n                }\n            });\n\n            register.addEventListener('click', (e) => {\n                e.preventDefault();\n                if (isDirty()) {\n                    return false;\n                } else {\n                    const href = register.dataset.url;\n                    if (href) {\n                        window.location.assign(href);\n                        return true;\n                    }\n                    return false;\n                }\n            });\n        }\n    };\n});\n"],"names":["define","$","init","form","document","getElementById","initial","Map","isDirty","dirty","find","each","el","this","name","has","type","checked","value","get","val","set","register","querySelector","needsRegistration","needsSaving","on","disabled","classList","add","remove","addEventListener","e","preventDefault","href","dataset","url","window","location","assign"],"mappings":";;;;;;;;AAuBAA,qCAAO,CAAC,WAAW,SAASC,SACjB,CACHC,KAAM,iBACIC,KAAOC,SAASC,eAAe,qBAChCF,kBAKCG,QAAU,IAAIC,aAeXC,cACDC,OAAQ,SACZR,EAAEE,MAAMO,KAAK,2BAA2BC,MAAK,iBACnCC,GAAKC,SACND,GAAGE,OAASR,QAAQS,IAAIH,GAAGE,cAGP,aAAZF,GAAGI,MAAmC,UAAZJ,GAAGI,KAAoBJ,GAAGK,QAAUL,GAAGM,QACnEZ,QAAQa,IAAIP,GAAGE,QACtBL,OAAQ,MAITA,MA3BXR,EAAEE,MAAMO,KAAK,2BAA2BC,MAAK,iBACnCC,GAAKC,SACND,GAAGE,kBAGFM,IAAmB,aAAZR,GAAGI,MAAmC,UAAZJ,GAAGI,KAAoBJ,GAAGK,QAAUL,GAAGM,MAC9EZ,QAAQe,IAAIT,GAAGE,KAAMM,cAwBnBE,SAAWnB,KAAKoB,cAAc,oCAC/BD,sBAICE,kBAAoBrB,KAAKoB,cAAc,wDACxCC,+BAICC,YAActB,KAAKoB,cAAc,8CAClCE,cAILxB,EAAEE,MAAMuB,GAAG,gBAAgB,KACvBJ,SAASK,SAAWnB,UAChBA,WACAgB,kBAAkBI,UAAUC,IAAI,UAChCJ,YAAYG,UAAUE,OAAO,YAE7BN,kBAAkBI,UAAUE,OAAO,UACnCL,YAAYG,UAAUC,IAAI,cAIlCP,SAASS,iBAAiB,SAAUC,OAChCA,EAAEC,iBACEzB,iBACO,EACJ,OACG0B,KAAOZ,SAASa,QAAQC,YAC1BF,OACAG,OAAOC,SAASC,OAAOL,OAChB"}