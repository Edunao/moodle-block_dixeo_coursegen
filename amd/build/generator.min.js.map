{"version":3,"file":"generator.min.js","sources":["../src/generator.js"],"sourcesContent":["define([\n    'jquery',\n    'core/templates',\n    'core/notification',\n    'core/str'\n], function($, Template, Notification, Str) {\n    const generatorForm         = document.getElementById('edai_course_generator_form');\n    const promptContainer       = generatorForm.querySelector('.prompt-container');\n    const promptForm            = generatorForm.querySelector('#prompt-form');\n    const carousel              = generatorForm.querySelector('#carousel-controls');\n    const generationContainer   = generatorForm.querySelector('.generation-container');\n    const courseDescription     = generatorForm.querySelector('#course_description');\n    const generateCourse        = generatorForm.querySelector('#generate_course');\n    const tempCourseFiles       = generatorForm.querySelector('#temp_course_files');\n    const courseFiles           = generatorForm.querySelector('#course_files');\n    const filesContainer        = generatorForm.querySelector('#file_names');\n    const spinner               = generatorForm.querySelector('#progress-spinner');\n\n    return {\n        init: function() {\n            this.progress = 0;\n\n            this.adjustDescriptionHeight();\n            this.handleDragAndDrop();\n\n            // Add event listener to generate course button.\n            generateCourse.addEventListener('click', (event) => {\n                event.preventDefault();\n\n                // Check if the course description is filled or files are uploaded.\n                if (courseDescription.value.trim() === '' && courseFiles.files.length === 0) {\n                    this.notify('invalidinput', 'descriptionorfilesrequired');\n                    return;\n                }\n\n                if (this.progress === 0) {\n                    this.startProgress();\n                }\n\n                // Real implementation. To be tested.\n                // Currently this block is 100% independent. Should it require other plugins?\n                /*\n                const formdata = new FormData();\n                formdata.append('description', courseDescription.value);\n                for (let i = 0; i < courseFiles.files.length; i++) {\n                    formdata.append('course_files[]', courseFiles.files[i]);\n                }\n\n                fetch(`${M.cfg.wwwroot}/local/edai_course_generator_client/ajax/generate_course.php`, {\n                    method: 'POST',\n                    body: formdata\n                })\n                .then(response => {\n                    return response.json().then(data => {\n                        if (!response.ok) {\n                            throw new Error(\n                                response.status === 402 ? data.error : 'Oops, error during course creation. Please try again.'\n                            );\n                        }\n                        return data;\n                    });\n                })\n                .then(courseid => {\n                    this.finishProgress(courseid);\n                })\n                .catch(error => {\n                    Notification.alert('', error.message);\n                });\n                */\n\n                // For non-functional demo only. Complete after X seconds.\n                setTimeout(() => {\n                    let courseid = 2;\n                    this.finishProgress(courseid);\n                }, 5000);\n            });\n        },\n        adjustDescriptionHeight: function() {\n            // Adjust course description height.\n            const initialheight = courseDescription.clientHeight;\n            courseDescription.addEventListener('input', function() {\n                const maxlines = 9;\n                const lineheight = parseFloat(getComputedStyle(courseDescription).lineHeight);\n                const lines = courseDescription.value.split('\\n').length;\n\n                let newheight;\n                if (lines * lineheight < initialheight) {\n                    newheight = initialheight;\n                } else if (lines <= maxlines) {\n                    newheight = lines * lineheight;\n                    courseDescription.style.overflowY = 'hidden';\n                } else {\n                    newheight = maxlines * lineheight;\n                    courseDescription.style.overflowY = 'scroll';\n                }\n\n                // Additional padding.\n                newheight += newheight > initialheight ? 14 : 0;\n                courseDescription.style.height = newheight + 'px';\n            });\n        },\n        clearAllFiles: function() {\n            let dataTransfer = new DataTransfer();\n            courseFiles.files = dataTransfer.files;\n            this.displayFileNames();\n        },\n        transferFiles: function(newFiles) {\n            // Validate files.\n            const maxfilesize = 20 * 1024 * 1024;  // 20 MB\n            const maxtotalsize = 50 * 1024 * 1024; // 50 MB\n            const allowedtypes = [\n                'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n                'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n                'application/pdf',\n                'text/plain'\n            ];\n\n            let totalSize = 0;\n            let existingFiles = Array.from(courseFiles.files);\n\n            // Include the size of files already added to courseFiles.\n            for (let file of existingFiles) {\n                totalSize += file.size;\n            }\n\n            for (let file of newFiles) {\n                // Check file type.\n                if (!allowedtypes.includes(file.type)) {\n                    this.notify('uploaderror', ['filetypeinvalid', file.name]);\n                    return;\n                }\n                // Check file size.\n                totalSize += file.size;\n                if (file.size > maxfilesize) {\n                    this.notify('uploaderror', ['filetoolarge', file.name]);\n                    return;\n                }\n                // Check total size.\n                if (totalSize > maxtotalsize) {\n                    this.notify('uploaderror', 'totaltoolarge');\n                    return;\n                }\n            }\n\n            // Combine existing files with new files.\n            for (let file of newFiles) {\n                // Check if file already exists.\n                if (!existingFiles.some(existingFile => existingFile.name === file.name && existingFile.size === file.size)) {\n                    existingFiles.push(file);\n                }\n            }\n\n            // Add all files to DataTransfer\n            let dataTransfer = new DataTransfer();\n            for (let file of existingFiles) {\n                dataTransfer.items.add(file);\n            }\n\n            courseFiles.files = dataTransfer.files;\n            this.displayFileNames();\n        },\n        handleDragAndDrop: function() {\n            // Drag over and leave over prompt form.\n            let dragEnterCounter = 0;\n            $('#prompt-form').bind({\n                dragenter: function(event) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    dragEnterCounter++;\n                    promptContainer.classList.add('drag-over');\n                },\n                dragleave: function(event) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    dragEnterCounter--;\n                    if (dragEnterCounter === 0) {\n                        promptContainer.classList.remove('drag-over');\n                    }\n                },\n            });\n\n            // Apply drop listeners to all child elements of prompt form.\n            this.dropOnChildElements(promptForm);\n            // Move files from temp to course files.\n            tempCourseFiles.addEventListener('change', () => {\n                let newFiles = Array.from(tempCourseFiles.files);\n                this.transferFiles(newFiles);\n            });\n        },\n        dropOnChildElements: function(node) {\n            node.childNodes.forEach(child => {\n                this.dropOnChildElements(child);\n\n                child.addEventListener(\"dragover\", (event) => {\n                    event.preventDefault();\n                    event.stopPropagation();\n                });\n\n                child.addEventListener(\"drop\", (event) => {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    promptContainer.classList.remove('drag-over');\n\n                    if (event.dataTransfer.files.length > 0) {\n                        this.transferFiles(event.dataTransfer.files);\n                    }\n                });\n            });\n        },\n        startProgress: function() {\n            generateCourse.disabled = true;\n            spinner.classList.add('spinner-border');\n            promptContainer.classList.replace('d-block', 'd-none');\n            generationContainer.classList.replace('d-none', 'd-block');\n\n            let interval = setInterval(() => {\n                if (this.progress >= 90) {\n                    clearInterval(interval);\n                }\n\n                // Increase by a random amount every second\n                let increment = Math.floor(Math.random() * 5);\n                this.setProgress(this.progress + increment);\n            }, 1000);\n        },\n        finishProgress: async function(courseid) {\n            spinner.classList.remove('spinner-border');\n\n            Template.render('block_course_generator/success_message', {courseid: courseid}).then((html) => {\n                generationContainer.innerHTML += html;\n\n                let resetLink = generatorForm.querySelector('.reset-prompt');\n                if (resetLink) {\n                    resetLink.addEventListener('click', () => {\n                        this.resetProgress();\n                    });\n                }\n            }).catch((error) => {\n                Notification.exception(error);\n            });\n\n            this.setProgress(100);\n        },\n        resetProgress: function() {\n            generateCourse.disabled = false;\n            spinner.classList.remove('spinner-border');\n            promptContainer.classList.replace('d-none', 'd-block');\n            generationContainer.classList.replace('d-block', 'd-none');\n\n            courseDescription.value = '';\n\n            let successContainer = generatorForm.querySelector('#success_message_container');\n            if (successContainer) {\n                successContainer.remove();\n            }\n\n            this.clearAllFiles();\n\n            this.setProgress(0);\n        },\n        setProgress: function(progress) {\n            this.progress = progress;\n\n            let progressBar = generatorForm.querySelector('.s-progress--bar');\n            progressBar.style.width = `${progress}%`;\n            if (progress >= 100) {\n                progressBar.classList.add('done');\n            } else {\n                progressBar.classList.remove('done');\n            }\n        },\n        displayFileNames: function() {\n            let contextFiles = [];\n            let totalSize = 0;\n            for (let i = 0; i < courseFiles.files.length; i++) {\n                const file = courseFiles.files[i];\n                totalSize += file.size;\n                contextFiles.push({\n                    name: file.name,\n                    size: this.formatFilesize(file.size),\n                });\n            }\n            let hasFiles = contextFiles.length > 0;\n            let context = {\n                hasFiles: hasFiles,\n                totalSize: this.formatFilesize(totalSize),\n                files: contextFiles\n            };\n\n            if (hasFiles) {\n                carousel.classList.add('d-none');\n            } else {\n                carousel.classList.remove('d-none');\n            }\n\n            Template.render('block_course_generator/filenames', context).then((html) => {\n                filesContainer.innerHTML = html;\n\n                let deleteIcons = filesContainer.querySelectorAll('.delete-icon');\n                deleteIcons.forEach((deleteIcon, index) => {\n                    let that = this;\n                    let toDelete = courseFiles.files[index].name;\n\n                    deleteIcon.addEventListener('click', function() {\n                        // Remove file from display.\n                        let toolTipId = deleteIcon.getAttribute('aria-describedby');\n                        document.getElementById(toolTipId).remove();\n\n                        // Remove file from course files.\n                        let dataTransfer = new DataTransfer();\n                        for (let i = 0; i < courseFiles.files.length; i++) {\n                            if (courseFiles.files[i].name !== toDelete) {\n                                dataTransfer.items.add(courseFiles.files[i]);\n                            }\n                        }\n\n                        courseFiles.files = dataTransfer.files;\n                        that.displayFileNames();\n                    });\n                });\n\n            }).catch((error) => {\n                Notification.exception(error);\n            });\n        },\n        formatFilesize: (size) => {\n            const units = ['bytes', 'KB', 'MB', 'GB', 'TB'];\n            let unitIndex = 0;\n            while (size >= 1024 && unitIndex < units.length - 1) {\n                size /= 1024;\n                unitIndex++;\n            }\n            return `${size.toFixed(1)} ${units[unitIndex]}`;\n        },\n        notify: async function() {\n            let strings = [];\n            let component = 'block_course_generator';\n\n            for (let i = 0; i < arguments.length; i++) {\n                if (Array.isArray(arguments[i])) {\n                    strings.push({\n                        key: arguments[i][0],\n                        component: component,\n                        param: arguments[i][1]\n                    });\n                } else {\n                    strings.push({\n                        key: arguments[i],\n                        component: component\n                    });\n                }\n            }\n\n            Str.get_strings(strings)\n            .done((s) => {\n                if (s.length > 1) {\n                    Notification.alert(s[0], s[1]);\n                } else {\n                    Notification.alert('', s[0]);\n                }\n            })\n            .fail(Notification.exception);\n        }\n    };\n});\n"],"names":["define","$","Template","Notification","Str","generatorForm","document","getElementById","promptContainer","querySelector","promptForm","carousel","generationContainer","courseDescription","generateCourse","tempCourseFiles","courseFiles","filesContainer","spinner","init","this","progress","adjustDescriptionHeight","handleDragAndDrop","addEventListener","event","preventDefault","value","trim","files","length","startProgress","setTimeout","finishProgress","notify","initialheight","clientHeight","lineheight","parseFloat","getComputedStyle","lineHeight","lines","split","newheight","style","overflowY","height","clearAllFiles","dataTransfer","DataTransfer","displayFileNames","transferFiles","newFiles","allowedtypes","totalSize","existingFiles","Array","from","file","size","includes","type","name","some","existingFile","push","items","add","dragEnterCounter","bind","dragenter","stopPropagation","classList","dragleave","remove","dropOnChildElements","node","childNodes","forEach","child","disabled","replace","interval","setInterval","clearInterval","increment","Math","floor","random","setProgress","async","courseid","render","then","html","innerHTML","resetLink","resetProgress","catch","error","exception","successContainer","progressBar","width","concat","contextFiles","i","formatFilesize","hasFiles","context","querySelectorAll","deleteIcon","index","that","toDelete","toolTipId","getAttribute","units","unitIndex","toFixed","strings","arguments","isArray","key","component","param","get_strings","done","s","alert","fail"],"mappings":"AAAAA,0CAAO,CACH,SACA,iBACA,oBACA,aACD,SAASC,EAAGC,SAAUC,aAAcC,KACnC,MAAMC,cAAwBC,SAASC,eAAe,8BAChDC,gBAAwBH,cAAcI,cAAc,qBACpDC,WAAwBL,cAAcI,cAAc,gBACpDE,SAAwBN,cAAcI,cAAc,sBACpDG,oBAAwBP,cAAcI,cAAc,yBACpDI,kBAAwBR,cAAcI,cAAc,uBACpDK,eAAwBT,cAAcI,cAAc,oBACpDM,gBAAwBV,cAAcI,cAAc,sBACpDO,YAAwBX,cAAcI,cAAc,iBACpDQ,eAAwBZ,cAAcI,cAAc,eACpDS,QAAwBb,cAAcI,cAAc,qBAE1D,MAAO,CACHU,KAAM,WACFC,KAAKC,SAAW,EAEhBD,KAAKE,0BACLF,KAAKG,oBAGLT,eAAeU,iBAAiB,SAAUC,QACtCA,MAAMC,iBAGiC,KAAnCb,kBAAkBc,MAAMC,QAA8C,IAA7BZ,YAAYa,MAAMC,QAKzC,IAAlBV,KAAKC,UACLD,KAAKW,gBAmCTC,YAAW,KAEPZ,KAAKa,eADU,EACc,GAC9B,MA3CCb,KAAKc,OAAO,eAAgB,6BA2CxB,GAEf,EACDZ,wBAAyB,WAErB,MAAMa,cAAgBtB,kBAAkBuB,aACxCvB,kBAAkBW,iBAAiB,SAAS,WACxC,MACMa,WAAaC,WAAWC,iBAAiB1B,mBAAmB2B,YAC5DC,MAAQ5B,kBAAkBc,MAAMe,MAAM,MAAMZ,OAElD,IAAIa,UACAF,MAAQJ,WAAaF,cACrBQ,UAAYR,cACLM,OAPM,GAQbE,UAAYF,MAAQJ,WACpBxB,kBAAkB+B,MAAMC,UAAY,WAEpCF,UAXa,EAWUN,WACvBxB,kBAAkB+B,MAAMC,UAAY,UAIxCF,WAAaA,UAAYR,cAAgB,GAAK,EAC9CtB,kBAAkB+B,MAAME,OAASH,UAAY,IACjD,GACH,EACDI,cAAe,WACX,IAAIC,aAAe,IAAIC,aACvBjC,YAAYa,MAAQmB,aAAanB,MACjCT,KAAK8B,kBACR,EACDC,cAAe,SAASC,UAEpB,MAEMC,aAAe,CACjB,4EACA,0EACA,kBACA,cAGJ,IAAIC,UAAY,EACZC,cAAgBC,MAAMC,KAAKzC,YAAYa,OAG3C,IAAK,IAAI6B,QAAQH,cACbD,WAAaI,KAAKC,KAGtB,IAAK,IAAID,QAAQN,SAAU,CAEvB,IAAKC,aAAaO,SAASF,KAAKG,MAE5B,YADAzC,KAAKc,OAAO,cAAe,CAAC,kBAAmBwB,KAAKI,OAKxD,GADAR,WAAaI,KAAKC,KACdD,KAAKC,KAzBO,SA2BZ,YADAvC,KAAKc,OAAO,cAAe,CAAC,eAAgBwB,KAAKI,OAIrD,GAAIR,UA7Ba,SA+Bb,YADAlC,KAAKc,OAAO,cAAe,gBAGnC,CAGA,IAAK,IAAIwB,QAAQN,SAERG,cAAcQ,MAAKC,cAAgBA,aAAaF,OAASJ,KAAKI,MAAQE,aAAaL,OAASD,KAAKC,QAClGJ,cAAcU,KAAKP,MAK3B,IAAIV,aAAe,IAAIC,aACvB,IAAK,IAAIS,QAAQH,cACbP,aAAakB,MAAMC,IAAIT,MAG3B1C,YAAYa,MAAQmB,aAAanB,MACjCT,KAAK8B,kBACR,EACD3B,kBAAmB,WAEf,IAAI6C,iBAAmB,EACvBnE,EAAE,gBAAgBoE,KAAK,CACnBC,UAAW,SAAS7C,OAChBA,MAAMC,iBACND,MAAM8C,kBACNH,mBACA5D,gBAAgBgE,UAAUL,IAAI,YACjC,EACDM,UAAW,SAAShD,OAChBA,MAAMC,iBACND,MAAM8C,kBACNH,mBACyB,IAArBA,kBACA5D,gBAAgBgE,UAAUE,OAAO,YAEzC,IAIJtD,KAAKuD,oBAAoBjE,YAEzBK,gBAAgBS,iBAAiB,UAAU,KACvC,IAAI4B,SAAWI,MAAMC,KAAK1C,gBAAgBc,OAC1CT,KAAK+B,cAAcC,SAAS,GAEnC,EACDuB,oBAAqB,SAASC,MAC1BA,KAAKC,WAAWC,SAAQC,QACpB3D,KAAKuD,oBAAoBI,OAEzBA,MAAMvD,iBAAiB,YAAaC,QAChCA,MAAMC,iBACND,MAAM8C,iBAAiB,IAG3BQ,MAAMvD,iBAAiB,QAASC,QAC5BA,MAAMC,iBACND,MAAM8C,kBACN/D,gBAAgBgE,UAAUE,OAAO,aAE7BjD,MAAMuB,aAAanB,MAAMC,OAAS,GAClCV,KAAK+B,cAAc1B,MAAMuB,aAAanB,MAC1C,GACF,GAET,EACDE,cAAe,WACXjB,eAAekE,UAAW,EAC1B9D,QAAQsD,UAAUL,IAAI,kBACtB3D,gBAAgBgE,UAAUS,QAAQ,UAAW,UAC7CrE,oBAAoB4D,UAAUS,QAAQ,SAAU,WAEhD,IAAIC,SAAWC,aAAY,KACnB/D,KAAKC,UAAY,IACjB+D,cAAcF,UAIlB,IAAIG,UAAYC,KAAKC,MAAsB,EAAhBD,KAAKE,UAChCpE,KAAKqE,YAAYrE,KAAKC,SAAWgE,UAAU,GAC5C,IACN,EACDpD,eAAgByD,eAAeC,UAC3BzE,QAAQsD,UAAUE,OAAO,kBAEzBxE,SAAS0F,OAAO,yCAA0C,CAACD,SAAUA,WAAWE,MAAMC,OAClFlF,oBAAoBmF,WAAaD,KAEjC,IAAIE,UAAY3F,cAAcI,cAAc,iBACxCuF,WACAA,UAAUxE,iBAAiB,SAAS,KAChCJ,KAAK6E,eAAe,GAE5B,IACDC,OAAOC,QACNhG,aAAaiG,UAAUD,MAAM,IAGjC/E,KAAKqE,YAAY,IACpB,EACDQ,cAAe,WACXnF,eAAekE,UAAW,EAC1B9D,QAAQsD,UAAUE,OAAO,kBACzBlE,gBAAgBgE,UAAUS,QAAQ,SAAU,WAC5CrE,oBAAoB4D,UAAUS,QAAQ,UAAW,UAEjDpE,kBAAkBc,MAAQ,GAE1B,IAAI0E,iBAAmBhG,cAAcI,cAAc,8BAC/C4F,kBACAA,iBAAiB3B,SAGrBtD,KAAK2B,gBAEL3B,KAAKqE,YAAY,EACpB,EACDA,YAAa,SAASpE,UAClBD,KAAKC,SAAWA,SAEhB,IAAIiF,YAAcjG,cAAcI,cAAc,oBAC9C6F,YAAY1D,MAAM2D,SAAKC,OAAMnF,SAAW,KACpCA,UAAY,IACZiF,YAAY9B,UAAUL,IAAI,QAE1BmC,YAAY9B,UAAUE,OAAO,OAEpC,EACDxB,iBAAkB,WACd,IAAIuD,aAAe,GACfnD,UAAY,EAChB,IAAK,IAAIoD,EAAI,EAAGA,EAAI1F,YAAYa,MAAMC,OAAQ4E,IAAK,CAC/C,MAAMhD,KAAO1C,YAAYa,MAAM6E,GAC/BpD,WAAaI,KAAKC,KAClB8C,aAAaxC,KAAK,CACdH,KAAMJ,KAAKI,KACXH,KAAMvC,KAAKuF,eAAejD,KAAKC,OAEvC,CACA,IAAIiD,SAAWH,aAAa3E,OAAS,EACjC+E,QAAU,CACVD,SAAUA,SACVtD,UAAWlC,KAAKuF,eAAerD,WAC/BzB,MAAO4E,cAGPG,SACAjG,SAAS6D,UAAUL,IAAI,UAEvBxD,SAAS6D,UAAUE,OAAO,UAG9BxE,SAAS0F,OAAO,mCAAoCiB,SAAShB,MAAMC,OAC/D7E,eAAe8E,UAAYD,KAET7E,eAAe6F,iBAAiB,gBACtChC,SAAQ,CAACiC,WAAYC,SAC7B,IAAIC,KAAO7F,KACP8F,SAAWlG,YAAYa,MAAMmF,OAAOlD,KAExCiD,WAAWvF,iBAAiB,SAAS,WAEjC,IAAI2F,UAAYJ,WAAWK,aAAa,oBACxC9G,SAASC,eAAe4G,WAAWzC,SAGnC,IAAI1B,aAAe,IAAIC,aACvB,IAAK,IAAIyD,EAAI,EAAGA,EAAI1F,YAAYa,MAAMC,OAAQ4E,IACtC1F,YAAYa,MAAM6E,GAAG5C,OAASoD,UAC9BlE,aAAakB,MAAMC,IAAInD,YAAYa,MAAM6E,IAIjD1F,YAAYa,MAAQmB,aAAanB,MACjCoF,KAAK/D,kBACT,GAAE,GACJ,IAEHgD,OAAOC,QACNhG,aAAaiG,UAAUD,MAAM,GAEpC,EACDQ,eAAiBhD,OACb,MAAM0D,MAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,MAC1C,IAAIC,UAAY,EAChB,KAAO3D,MAAQ,MAAQ2D,UAAYD,MAAMvF,OAAS,GAC9C6B,MAAQ,KACR2D,YAEJ,MAAA,GAAAd,OAAU7C,KAAK4D,QAAQ,GAAE,KAAAf,OAAIa,MAAMC,WAAU,EAEjDpF,OAAQwD,iBACJ,IAAI8B,QAAU,GAGd,IAAK,IAAId,EAAI,EAAGA,EAAIe,UAAU3F,OAAQ4E,IAC9BlD,MAAMkE,QAAQD,UAAUf,IACxBc,QAAQvD,KAAK,CACT0D,IAAKF,UAAUf,GAAG,GAClBkB,UANI,yBAOJC,MAAOJ,UAAUf,GAAG,KAGxBc,QAAQvD,KAAK,CACT0D,IAAKF,UAAUf,GACfkB,UAZI,2BAiBhBxH,IAAI0H,YAAYN,SACfO,MAAMC,IACCA,EAAElG,OAAS,EACX3B,aAAa8H,MAAMD,EAAE,GAAIA,EAAE,IAE3B7H,aAAa8H,MAAM,GAAID,EAAE,GAC7B,IAEHE,KAAK/H,aAAaiG,UACvB,EAER"}